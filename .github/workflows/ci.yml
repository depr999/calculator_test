name: CI - Build, Test and Generate Docs

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and Test on Ubuntu
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          qt6-base-dev \
          qt6-tools-dev \
          libqt6widgets6 \
          doxygen \
          graphviz \
          clang-format \
          clang

    - name: Configure and Build
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
        make -j4

    - name: Run Tests
      run: |
        cd build
        ./tests/CalculatorLogicTests --success  # Проверь, что путь верный

    - name: Generate Documentation
      run: |
        doxygen docs/Doxyfile
        ls -la docs/output/html/

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: calculator-app
        path: |
          build/src/Calculator
        retention-days: 7

    - name: Upload Documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/output/html/
        retention-days: 7
        if-no-files-found: warn

  build-clang:
    name: Build with Clang
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Clang and Qt
      run: |
        sudo apt-get update
        sudo apt-get install -y clang qt6-base-dev cmake

    - name: Build with Clang
      run: |
        mkdir build_clang
        cd build_clang
        export CC=clang
        export CXX=clang++
        cmake ..
        make -j4

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check code formatting
      run: |
        sudo apt-get install -y clang-format
        find src tests -name '*.cpp' -o -name '*.h' | xargs clang-format --style=file --dry-run --Werror

    - name: Check for TODO comments
      run: |
        echo "TODO comments found:"
        grep -r "TODO" src/ tests/ || echo "No TODO comments found"
